{
  "version": 3,
  "sources": ["../../../src/shared/hasOwnProperty.js", "../../../src/shared/ReactSymbols.js", "../../../src/react/src/jsx/ReactJSXElement.js"],
  "sourcesContent": ["const { hasOwnProperty } = Object.prototype;\nexport default hasOwnProperty;", "export const REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");", "import hasOwnProperty from \"shared/hasOwnProperty\";\nimport { REACT_ELEMENT_TYPE } from \"shared/ReactSymbols\";\n\nconst RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __srouce: true,\n};\n\nfunction hasValidRef(config) {\n  return config.ref !== undefined;\n}\n\nconst ReactElement = (type, key, ref, props) => {\n  const element = {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type,\n    key,\n    ref,\n    props,\n  };\n  return element;\n};\n\nexport function jsxDEV(type, config, maybeKey) {\n  let propName;\n  const props = {};\n  let key = null;\n  let ref = null;\n  if (maybeKey !== undefined) {\n    key = \"\" + maybeKey;\n  }\n  if (hasValidRef(config)) {\n    ref = config.ref;\n  }\n  for (propName in config) {\n    if (\n      hasOwnProperty.call(config, propName) &&\n      !RESERVED_PROPS.hasOwnProperty(propName)\n    ) {\n      props[propName] = config[propName];\n    }\n  }\n\n  return ReactElement(type, key, ref, props);\n}\n"],
  "mappings": ";AAAA,IAAM,EAAE,eAAe,IAAI,OAAO;AAClC,IAAO,yBAAQ;;;ACDR,IAAM,qBAAqB,OAAO,IAAI,eAAe;;;ACG5D,IAAM,iBAAiB;AAAA,EACrB,KAAK;AAAA,EACL,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,UAAU;AACZ;AAEA,SAAS,YAAY,QAAQ;AAC3B,SAAO,OAAO,QAAQ;AACxB;AAEA,IAAM,eAAe,CAAC,MAAM,KAAK,KAAK,UAAU;AAC9C,QAAM,UAAU;AAAA,IACd,UAAU;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,SAAO;AACT;AAEO,SAAS,OAAO,MAAM,QAAQ,UAAU;AAC7C,MAAI;AACJ,QAAM,QAAQ,CAAC;AACf,MAAI,MAAM;AACV,MAAI,MAAM;AACV,MAAI,aAAa,QAAW;AAC1B,UAAM,KAAK;AAAA,EACb;AACA,MAAI,YAAY,MAAM,GAAG;AACvB,UAAM,OAAO;AAAA,EACf;AACA,OAAK,YAAY,QAAQ;AACvB,QACE,uBAAe,KAAK,QAAQ,QAAQ,KACpC,CAAC,eAAe,eAAe,QAAQ,GACvC;AACA,YAAM,QAAQ,IAAI,OAAO,QAAQ;AAAA,IACnC;AAAA,EACF;AAEA,SAAO,aAAa,MAAM,KAAK,KAAK,KAAK;AAC3C;",
  "names": []
}
