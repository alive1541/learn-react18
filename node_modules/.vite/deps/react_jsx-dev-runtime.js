// src/shared/hasOwnProperty.js
var { hasOwnProperty } = Object.prototype;
var hasOwnProperty_default = hasOwnProperty;

// src/shared/ReactSymbols.js
var REACT_ELEMENT_TYPE = Symbol.for("react.element");

// src/react/src/jsx/ReactJSXElement.js
var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __srouce: true
};
function hasValidRef(config) {
  return config.ref !== void 0;
}
var ReactElement = (type, key, ref, props) => {
  const element = {
    $$typeof: REACT_ELEMENT_TYPE,
    type,
    key,
    ref,
    props
  };
  return element;
};
function jsxDEV(type, config, maybeKey) {
  let propName;
  const props = {};
  let key = null;
  let ref = null;
  if (maybeKey !== void 0) {
    key = "" + maybeKey;
  }
  if (hasValidRef(config)) {
    ref = config.ref;
  }
  for (propName in config) {
    if (hasOwnProperty_default.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
      props[propName] = config[propName];
    }
  }
  return ReactElement(type, key, ref, props);
}
export {
  jsxDEV
};
//# sourceMappingURL=react_jsx-dev-runtime.js.map
